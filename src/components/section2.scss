@import '_variables';
@import '_mixins';

.gridder {
    //border: 1px solid green;
    width: 100%;    
    height: 100%;
    display: grid; 
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: repeat(2, 1fr);
    justify-items: center;
    align-items: center;
    gap: 0px 0px;    
    @media (orientation: landscape) {
      grid-template-rows: repeat(2, 1fr);
      grid-template-columns: repeat(3, 1fr);
    }
}

.gridderOverlay {
    //border: 1px solid red;
    position: fixed;
    top: 0;
    left: 0;
    // width: 100vw;
    // height: 100vh;
    width: 0vw;
    height: 0vh;
    z-index: 1; //to match 'hey', which otherwise gets on top of it
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    & button {
        width: 5vw;
        height: 5vw;        
        position: absolute;
        top: 5vw;
        right: 5vw;
        @include closeBtn;
    }
}

.gridderField {
    //border: 1px solid blue;
    //do not make it larger as it will not align on reseize
    width: 70%;    
    height: 70%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    @media (orientation: landscape) {
      width: 80%;    
      height: 80%;
    } 
}

.methoder {
    position: relative; //for its content text p below
    //border: 1px solid violet; set border in @include methoderBckg;
    cursor: pointer;
    border-radius: 20px;
    background-color: rgba(0, 0, 0, 0.9);    
    &:hover .decorator:nth-of-type(1) {            
        transform: translate(-100%, -100%) scale(1.5) rotate(-135deg);
    }
    &:hover .decorator:nth-of-type(2) {            
        transform: translate(100%, -100%) scale(1.5) rotate(-45deg);
    }
    &:hover .decorator:nth-of-type(3) {            
        transform: translate(-100%, 100%) scale(1.5) rotate(135deg);
    }
    &:hover .decorator:nth-of-type(4) {            
        transform: translate(100%, 100%) scale(1.5) rotate(45deg);
    }
    &.Th {
        border: 1px solid rgba(0,0,0,0.2);
        background-image: url('../images/lexis.svg');
        @include methoderBckg;
    }
    &.No {
        border: 1px solid rgba(0,0,0,0.2);
        background-image: url('../images/noentry.svg');
        @include methoderBckg;
    }
    &.Gr {
        border: 1px solid rgba(0,0,0,0.2);
        background-image: url('../images/growth.svg');
        @include methoderBckg;
        
    }
    &.di {
        border: 1px solid rgba(0,0,0,0.2);
        background-image: url('../images/discussion.svg');
        @include methoderBckg;
    }
    &.IT {
        border: 1px solid rgba(0,0,0,0.2);
        background-image: url('../images/computer.svg');
        @include methoderBckg;
    }
    &.ma {
        border: 1px solid rgba(0, 0, 0, 0.2);
        background-image: url('../images/people.svg');
        @include methoderBckg;
    }
    
    & p {
        position: absolute;
        bottom: 0%;
        left: 0;
        font-family: $secondary-font;
        text-transform: uppercase;
        font-size: 14px;
        color: $yellow;
        padding: 5% 10%;
        font-size: 1.5vw;
        background-color: rgba(0, 0, 0, 0.6);
        border-radius: 20px;      
        @media (max-width: map-get($breakpoints, small)) {
            font-size: 14px;            
        }
    }    
}

.decorator {
    position: absolute;
    background-image: url('../images/arrow.svg');
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;    
    width: 5%;
    height: 5%;
    transition: transform 0.3s;
    
    &:nth-of-type(1) {
        top: 0;
        left: 0;
        transform: translate(-50%, -50%) scale(1) rotate(-135deg);        
    }
    &:nth-of-type(2) {
        //border: 1px solid red;
        top: 0;
        right: 0;        
        transform: translate(50%, -50%) scale(1) rotate(-45deg);
    }
    &:nth-of-type(3) {
        bottom: 0;
        left: 0;
        transform: translate(-50%, 50%) scale(1) rotate(135deg);
    }
    &:nth-of-type(4) {
        bottom: 0;
        right: 0;        
        transform: translate(50%, 50%) scale(1) rotate(45deg);
    }
}